{
  "openapi": "3.0.0",
  "info": {
    "title": "Champs Marketplace API",
    "version": "1.0.0",
    "description": "API documentation for the Marketplace project, a comprehensive marketplace platform connecting buyers and sellers. Each seller manages their stall, stock, pricing, and discounts. Users can browse various stalls, add items to their cart, manage purchases, and rate vendors. Admins oversee user roles, stock, and platform operations. Key features include user management, shopping cart, checkout, rating system, and vendor stock management. The platform includes user, vendor, admin dashboards, contact form, login/signup, with optional features like subscriptions, email notifications, chatbot, and delivery. Built with Node, Express, Postgres, and React."
  },
  "servers": [
    {
      "url": "http://localhost:5000",
      "description": "Development server"
    },
    {
      "url": "https://champs-ec-be.onrender.com",
      "description": "Production server (HTTPS)"
    }
  ],
  "tags": [
    {
      "name": "Welcome",
      "description": "API endpoints for landing page"
    },
    {
      "name": "Authentication",
      "description": "API endpoints for managing users"
    },
    {
      "name": "Users",
      "description": "API endpoints for managing Users"
    },{
      "name": "Roles",
      "description": "API endpoints for managing roles"
    },
    {
      "name": "AssignRole",
      "description": "API endpoints for assigning roles to users"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "summary": "Welcome",
        "tags": ["Welcome"],
        "responses": {
          "200": {
            "description": "Welcome Page",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {}
                }
              }
            }
          }
        },
        "security": [{"Bearer": []}]
      }
    },

    "/api/users/signup": {
      "post": {
        "summary": "User Sign Up",
        "description": "Create a new user account",
        "tags": ["Authentication"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": {"type": "string"},
                  "lastName": {"type": "string"},
                  "email": {"type": "string"},
                  "password": {"type": "string"}
                },
                "required": ["firstName", "lastName", "email", "password"]
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {"description": "User created successfully"}
        }
      }
    },
    "/api/users/login": {
      "post": {
        "summary": "User Sign In",
        "description": "Authenticate user and generate access token",
        "tags": ["Authentication"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {"type": "string"},
                  "password": {"type": "string"}
                },
                "required": ["email", "password"]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {"description": "User authenticated successfully"},
          "401": {"description": "Invalid credentials"}
        }
      }
    },
    "/api/users/otp/{token}": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Verify OTP for the seller",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "OTP Token",
            "schema": {"type": "string"}
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "otp": {"type": "string"}
                }
              }
            }
          }
        },
        "responses": {
          "200": {"description": "Login Successful"},
          "401": {"description": "Wrong OTP entered"},
          "404": {"description": "Invalid token"}
        }
      },
    "/api/roles": {
      "post": {
        "summary": "Create Role",
        "description": "Create a new role",
        "tags": ["Roles"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                
                },
                "required": ["name"]
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Role created successfully"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "get": {
        "summary": "Get All Roles",
        "description": "Get a list of all roles",
        "tags": ["Roles"],
        "responses": {
          "200": {
            "description": "List of all roles"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/roles/{id}": {
      "get": {
        "summary": "Get Role by ID",
        "description": "Get a role by its ID",
        "tags": ["Roles"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the role",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Role found"
          },
          "404": {
            "description": "Role not found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "summary": "Update Role",
        "description": "Update a role by its ID",
        "tags": ["Roles"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the role",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Role updated successfully"
          },
          "404": {
            "description": "Role not found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "summary": "Delete Role",
        "description": "Delete a role by its ID",
        "tags": ["Roles"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the role",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Role deleted successfully"
          },
          "404": {
            "description": "Role not found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/users/{userId}/roles": {
      "post": {
        "summary": "Assign Role to User",
        "description": "Assign a role to a specific user",
        "tags": ["AssignRole"],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "roleId": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Role assigned to user successfully"
          },
          "404": {
            "description": "User or Role not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    }
    },
    "/api/users/login/google": {
      "get": {
        "summary": "Google Login",
        "description": "Allows users to log in using their Google account. When the user clicks the 'Sign in with Google' button, they will be redirected to this endpoint, which will handle the Google OAuth2 authentication flow.",
        "tags": ["Authentication"],
        "responses": {
          "302": {
            "description": "Redirect to Google Login",
            "headers": {
              "Location": {
                "schema": {"type": "string"},
                "description": "http://localhost:4000/api/users/login/google"
              }
            }
          }
        }
      }
    },
    "/api/users": {
      "get": {
        "summary": "Get All Users",
        "description": "Get a list of all users",
        "tags": ["Users"],
        "responses": {
          "200": {
            "description": "List of all users"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/users/profile": {
      "get": {
        "summary": "User Profile",
        "tags": ["User profile page"],
        "responses": {
          "200": {
            "description": "Profile page",
            "content": {
              "application/json": {
                "schema": {"type": "array", "items": {}}
              }
            }
          }
        },
        "security": [{"Bearer": []}]
      }
    },
    "/api/users/profiles": {
      "put": {
        "summary": "Edit Profile",
        "tags": ["User profile page"],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": {"type": "string"},
                  "lastName": {"type": "string"},
                  "phone": {"type": "string"},
                  "birthDate": {"type": "string", "format": "date"},
                  "preferredLanguage": {"type": "string"},
                  "preferredCurrency": {"type": "string"},
                  "whereYouLive": {"type": "string"},
                  "billingAddress": {"type": "string"},
                  "profileImage": {"type": "string", "format": "binary"}
                }
              }
            }
          }
        },
        "responses": {
          "201": {"description": "Updated profile page"},
          "400": {"description": "Fail to update"}
        },
        "security": [{"Bearer": []}]
      }
    },
    "/api/roles": {
      "post": {
        "summary": "Create Role",
        "description": "Create a new role",
        "tags": ["Roles"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                
                },
                "required": ["name"]
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Role created successfully"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "get": {
        "summary": "Get All Roles",
        "description": "Get a list of all roles",
        "tags": ["Roles"],
        "responses": {
          "200": {
            "description": "List of all roles"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/roles/{id}": {
      "get": {
        "summary": "Get Role by ID",
        "description": "Get a role by its ID",
        "tags": ["Roles"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the role",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Role found"
          },
          "404": {
            "description": "Role not found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "summary": "Update Role",
        "description": "Update a role by its ID",
        "tags": ["Roles"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the role",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Role updated successfully"
          },
          "404": {
            "description": "Role not found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "summary": "Delete Role",
        "description": "Delete a role by its ID",
        "tags": ["Roles"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the role",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Role deleted successfully"
          },
          "404": {
            "description": "Role not found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/users/{userId}/roles": {
      "patch": {
        "summary": "Assign Role to User",
        "description": "Assign a role to a specific user",
        "tags": ["AssignRole"],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "roleId": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Role assigned to user successfully"
          },
          "404": {
            "description": "User or Role not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    }
}
  ,
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "required": ["firstName", "lastName", "email", "password"],
        "properties": {
          "firstName": {"type": "string", "description": "User's first name"},
          "lastName": {"type": "string", "description": "User's last name"},
          "email": {"type": "string", "format": "email", "description": "User's email address"},
          "password": {"type": "string", "format": "password", "description": "User's password"}
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      }
    }
  }
}