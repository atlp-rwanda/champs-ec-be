{
  "openapi": "3.0.0",
  "info": {
    "title": "Champs Marketplace API",
    "version": "1.0.0",
    "description": "API documentation for the Marketplace project, a comprehensive marketplace platform connecting buyers and sellers. Each seller manages their stall, stock, pricing, and discounts. Users can browse various stalls, add items to their cart, manage purchases, and rate vendors. Admins oversee user roles, stock, and platform operations. Key features include user management, shopping cart, checkout, rating system, and vendor stock management. The platform includes user, vendor, admin dashboards, contact form, login/signup, with optional features like subscriptions, email notifications, chatbot, and delivery. Built with Node, Express, Postgres, and React."
  },
  "servers": [
    {
      "url": "http://localhost:8000",
      "description": "Development server"
    },
    {
      "url": "https://champs-ec-be.onrender.com",
      "description": "Production server (HTTPS)"
    }
  ],
  "tags": [
    {
      "name": "Welcome",
      "description": "API endpoints for landing page"
    },
    {
      "name": "Authentication",
      "description": "API endpoints for managing users"
    },
    {
      "name": "Users",
      "description": "API endpoints for managing Users"
    },
    {
      "name": "Roles",
      "description": "API endpoints for managing roles"
    },
    {
      "name": "AssignRole",
      "description": "API endpoints for assigning roles to users"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "summary": "Welcome",
        "tags": ["Welcome"],
        "responses": {
          "200": {
            "description": "Welcome Page",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {}
                }
              }
            }
          }
        },
        "security": [{ "Bearer": [] }]
      }
    },

    "/api/users/signup": {
      "post": {
        "summary": "User Sign Up",
        "description": "Create a new user account",
        "tags": ["Authentication"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": { "type": "string" },
                  "lastName": { "type": "string" },
                  "email": { "type": "string" },
                  "password": { "type": "string" }
                },
                "required": ["firstName", "lastName", "email", "password"]
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": { "description": "User created successfully" }
        }
      }
    },
    "/api/users/login": {
      "post": {
        "summary": "User Sign In",
        "description": "Authenticate user and generate access token",
        "tags": ["Authentication"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": { "type": "string" },
                  "password": { "type": "string" }
                },
                "required": ["email", "password"]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": { "description": "User authenticated successfully" },
          "401": { "description": "Invalid credentials" }
        }
      }
    },
   
    "/api/users/reset-password": {
      "post": {
        "summary": "User Reset Password",
        "description": "Reset User Paassword via Email",
        "tags": ["Authentication"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  }
                },
                "required": ["email"]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Password reset Instructions sent successfully"
          },
          "400": {
            "description": "User not found"
          }
        }
      }
    },
    "/api/users/reset-password/{token}": {
      "patch": {
        "summary": "User Reset Password",
        "description": "Reset User Paassword via Email",
        "tags": ["Authentication"],
        "parameters": [
          {
              "name": "token",
              "in": "path",
              "description": "token",
              "schema": {
                  "type": "string"
              }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "newPassword": {
                    "type": "string"
                  },
                  "confirmPassword": {
                    "type": "string"
                  }
                },
                "required": ["newPassword", "confirmPassword"]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Password updated succesfully"
          },
          "400": {
            "description": "Passwords don't match"
          }
        }
      }
    },
    "/api/users": {
      "get": {
        "summary": "Get All Users",
        "description": "Get a list of all users",
        "tags": ["Users"],
        "responses": {
          "200": {
            "description": "List of all users"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },

    "/api/users/profiles": {
      "put": {
        "summary": "Edit Profile",
        "tags": ["User profile page"],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": {"type": "string"},
                  "lastName": {"type": "string"},
                  "phone": {"type": "string"},
                  "birthDate": {"type": "string", "format": "date"},
                  "preferredLanguage": {"type": "string"},
                  "preferredCurrency": {"type": "string"},
                  "whereYouLive": {"type": "string"},
                  "billingAddress": {"type": "string"},
                  "profileImage": {"type": "string", "format": "binary"}
                }
              }
            }
          }
        },
        "responses": {
          "201": {"description": "Updated profile page"},
          "400": {"description": "Fail to update"}
        },
        "security": [{"Bearer": []}]
      }
    },
    "/api/users/otp": {
      "post": {
        "tags": ["Two factor OTP"],
        "summary": "Send OTP request",
        "security": [{"Bearer": []}],
        "responses": {
          "201": {"description": "Verification code sent successfully"}
        }
      }
    },
    "/api/users/otp/{token}": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Verify OTP for the seller",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "OTP Token",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "otp": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Login Successful" },
          "401": { "description": "Wrong OTP entered" },
          "404": { "description": "Invalid token" }
        }
      },
      "/api/roles": {
        "post": {
          "summary": "Create Role",
          "description": "Create a new role",
          "tags": ["Roles"],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": ["name"]
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "Role created successfully"
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ]
        },
        "get": {
          "summary": "Get All Roles",
          "description": "Get a list of all roles",
          "tags": ["Roles"],
          "responses": {
            "200": {
              "description": "List of all roles"
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ]
        }
      },
      "/api/roles/{id}": {
        "get": {
          "summary": "Get Role by ID",
          "description": "Get a role by its ID",
          "tags": ["Roles"],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID of the role",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Role found"
            },
            "404": {
              "description": "Role not found"
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ]
        },
        "put": {
          "summary": "Update Role",
          "description": "Update a role by its ID",
          "tags": ["Roles"],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID of the role",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Role updated successfully"
            },
            "404": {
              "description": "Role not found"
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ]
        },
        "delete": {
          "summary": "Delete Role",
          "description": "Delete a role by its ID",
          "tags": ["Roles"],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID of the role",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Role deleted successfully"
            },
            "404": {
              "description": "Role not found"
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ]
        }
      },
      "/api/users/{userId}/roles": {
        "post": {
          "summary": "Assign Role to User",
          "description": "Assign a role to a specific user",
          "tags": ["AssignRole"],
          "parameters": [
            {
              "name": "userId",
              "in": "path",
              "description": "ID of the user",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "roleId": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Role assigned to user successfully"
            },
            "404": {
              "description": "User or Role not found"
            },
            "500": {
              "description": "Internal server error"
            }
          },
          "security": [
            {
              "Bearer": []
            }
          ]
        }
      }
    },
    "/api/users/google": {
      "get": {
        "summary": "Google Login",
        "description": "Allows users to log in using their Google account. When the user clicks the 'Sign in with Google' button, they will be redirected to this endpoint, which will handle the Google OAuth2 authentication flow.",
        "tags": ["Authentication"],
        "responses": {
          "302": {
            "description": "Redirect to Google Login",
            "headers": {
              "Location": {
                "schema": {"type": "string"},
                "description": "https://champs-ec-be.onrender.com/api/users/google"
              }
            }
          }
        }
      }
    },
    "/api/users/profile": {
      "get": {
        "summary": "User Profile",
        "tags": ["User profile page"],
        "responses": {
          "200": {
            "description": "Profile page",
            "content": {
              "application/json": {
                "schema": { "type": "array", "items": {} }
              }
            }
          }
        },
        "security": [{ "Bearer": [] }]
      }
    },
    "/api/roles": {
      "post": {
        "summary": "Create Role",
        "description": "Create a new role",
        "tags": ["Roles"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                },
                "required": ["name"]
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Role created successfully"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "get": {
        "summary": "Get All Roles",
        "description": "Get a list of all roles",
        "tags": ["Roles"],
        "responses": {
          "200": {
            "description": "List of all roles"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/roles/{id}": {
      "get": {
        "summary": "Get Role by ID",
        "description": "Get a role by its ID",
        "tags": ["Roles"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the role",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Role found"
          },
          "404": {
            "description": "Role not found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "summary": "Update Role",
        "description": "Update a role by its ID",
        "tags": ["Roles"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the role",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Role updated successfully"
          },
          "404": {
            "description": "Role not found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "summary": "Delete Role",
        "description": "Delete a role by its ID",
        "tags": ["Roles"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the role",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Role deleted successfully"
          },
          "404": {
            "description": "Role not found"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/users/{userId}/roles": {
      "patch": {
        "summary": "Assign Role to User",
        "description": "Assign a role to a specific user",
        "tags": ["AssignRole"],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the user",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "roleId": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Role assigned to user successfully"
          },
          "404": {
            "description": "User or Role not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/categories": {
      "post": {
        "summary": "Product categories",
        "description": "add new product Category",
        "tags": ["Product Category"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "categoryName": { "type": "string" }
                },
                "required": ["categoryName"]
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": { "description": "Product category is created successfully" }
        },
        "security": [{ "Bearer": [] }]
      },
      "get": {
        "summary": "Get all product categories",
        "tags": ["Product Category"],
        "responses": {
          "200": {
            "description": "All product categories",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AddProductCategory"
                  }
                }
              }
            }
          }
        },
        "security": [{ "Bearer": [] }]
      }
    },
    "/api/categories/{catId}": {
      "get": {
        "tags": ["Product Category"],
        "summary": "get single product category",
        "parameters": [
          {
            "name": "catId",
            "required": true,
            "in": "path",
            "description": "category id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": " selected product catgeory",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddProductCategory"
                }
              }
            }
          },
          "404": {
            "description": "Product catgeory not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [{ "Bearer": [] }]
      },
      "patch": {
        "tags": ["Product Category"],
        "summary": "update product category",
        "parameters": [
          {
            "name": "catId",
            "required": true,
            "in": "path",
            "description": "category id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddProductCategory"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "product category updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddProductCategory"
                }
              }
            }
          },
          "404": {
            "description": "Product item not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [{ "Bearer": [] }]
      },
      "delete": {
        "tags": ["Product Category"],
        "summary": "Delete a product Category",
        "parameters": [
          {
            "name": "catId",
            "required": true,
            "in": "path",
            "description": "category id",
            "schema": {
              "type": "string"
            }
          }
        ],

        "responses": {
          "204": { "description": "Product category deleted" },
          "404": { "description": "Product category not found" },
          "500": { "description": "Internal Server Error" }
        },
        "security": [{ "Bearer": [] }]
      }
    },

    "/api/products": {
      "post": {
        "summary": "Add new Product",
        "description": "Authenticate Seller could perform a CRUD operation over they own product",
        "tags": ["Seller Product CRUD"],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "productCategory": {
                    "type": "string"
                  },
                  "productName": {
                    "type": "string"
                  },
                  "stockLevel": {
                    "type": "string"
                  },
                  "productPrice": {
                    "type": "string"
                  },
                  "productCurrency": {
                    "type": "string"
                  },
                  "productImage": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  },
                  "productDescription": {
                    "type": "string"
                  },
                  "expireDate": {
                    "type": "string",
                    "format": "date-time"
                  }
                },
                "required": [
                  "productCategory",
                  "productName",
                  "productPrice",
                  "productCurrency",
                  "productDescription",
                  "productImage",
                  "stockLevel",
                  "expireDate"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Seller product is created successfully"
          },
          "401": {
            "description": "Invalid input, validation fail"
          },
          "409": {
            "description": "The item name is already exist to a seller collection"
          },
          "500": {
            "description": "internal server error"
          }
        },
        "security": [{ "Bearer": [] }]
      },
      "get": {
        "summary": "Get all product items for a seller",
        "tags": ["Seller Product CRUD"],
        "responses": {
          "200": {
            "description": "All product items for authenticated seller",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SellerProduct"
                  }
                }
              }
            }
          }
        },
        "security": [{ "Bearer": [] }]
      }
    },
    "/api/products/{productId}": {
      "get": {
        "tags": ["Seller Product CRUD"],
        "summary": "get single item in seller collection",
        "parameters": [
          {
            "name": "productId",
            "required": true,
            "in": "path",
            "description": "Product id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product item selected",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SellerProduct"
                }
              }
            }
          },
          "404": {
            "description": "Product item not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [{ "Bearer": [] }]
      },
      "delete": {
        "tags": ["Seller Product CRUD"],
        "summary": "Delete one item in seller collection",
        "parameters": [
          {
            "name": "productId",
            "required": true,
            "in": "path",
            "description": "Product id",
            "schema": {
              "type": "string"
            }
          }
        ],

        "responses": {
          "204": { "description": "Product item  deleted" },
          "404": { "description": "Product item not found" },
          "500": { "description": "Internal Server Error" }
        },
        "security": [{ "Bearer": [] }]
      },

      "patch": {
        "tags": ["Seller Product CRUD"],
        "summary": "update product",
        "parameters": [
          {
            "name": "productId",
            "required": true,
            "in": "path",
            "description": "Product id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/SellerProduct"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "product Item updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SellerProduct"
                }
              }
            }
          },
          "404": {
            "description": "Product item not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [{ "Bearer": [] }]
      }
    },

    "/api/products/{productId}/pictures/{imgId}": {
      "delete": {
        "tags": ["Manage single Item pictures"],
        "summary": "Delete one picture for specific  item ",
        "parameters": [
          {
            "name": "productId",
            "required": true,
            "in": "path",
            "description": "Product id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "imgId",
            "required": true,
            "in": "path",
            "description": "Image id",
            "schema": {
              "type": "string"
            }
          }
        ],

        "responses": {
          "203": { "description": "the product image  deleted" },
          "404": { "description": "the product image not found" },
          "500": { "description": "Internal Server Error" }
        },
        "security": [{ "Bearer": [] }]
      },

      "patch": {
        "tags": ["Manage single Item pictures"],
        "summary": "Replace a single picture for a specific item",
        "parameters": [
          {
            "name": "productId",
            "required": true,
            "in": "path",
            "description": "Product id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "imgId",
            "required": true,
            "in": "path",
            "description": "Image id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": "true",
                "properties": {
                  "productImage": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "product Item updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SellerProduct"
                }
              }
            }
          },
          "404": {
            "description": "Product item not found or selected image not exist"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [{ "Bearer": [] }]
      }
    },
    "/api/products/{productId}/profile/{imgId}": {
      "patch": {
        "tags": ["Item thumbnail"],
        "summary": "set thumbnail for product item  ",
        "parameters": [
          {
            "name": "productId",
            "required": true,
            "in": "path",
            "description": "Product id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "imgId",
            "required": true,
            "in": "path",
            "description": "Image id",
            "schema": {
              "type": "string"
            }
          }
        ],

        "responses": {
          "200": { "description": "Thumbnail for product item updated" },
          "404": {
            "description": "product item not found or selected image not exist"
          },
          "500": { "description": "Internal Server Error" }
        },
        "security": [{ "Bearer": [] }]
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "required": ["firstName", "lastName", "email", "password"],
        "properties": {
          "firstName": { "type": "string", "description": "User's first name" },
          "lastName": { "type": "string", "description": "User's last name" },
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email address"
          },
          "password": {
            "type": "string",
            "format": "password",
            "description": "User's password"
          }
        }
      },
      "SellerProduct": {
        "type": "object",
        "properties": {
          "productCategory": {
            "type": "string",
            "description": "product item category"
          },
          "productName": {
            "type": "string",
            "description": "product item name "
          },
          "stockLevel": {
            "type": "string",
            "description": "add stock level "
          },
          "productPrice": {
            "type": "string",
            "description": "product item price"
          },
          "productCurrency": {
            "type": "string",
            "format": "password",
            "description": "the product curreny unit"
          },
          "productDescription": {
            "type": "string",
            "description": "Item description"
          },
          "productDiscount": {
            "type": "string"
          },
          "productImage": {
            "type": "string",
            "format": "binary",
            "description": "Item more pictures is required "
          },
          "expireDate": {
            "type": "string",
            "description": "Item expire date is required"
          }
        }
      },
      "AddProductCategory": {
        "type": "object",
        "properties": {
          "categoryName": {
            "type": "string",
            "description": "product item category"
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      }
    }
  }
}
